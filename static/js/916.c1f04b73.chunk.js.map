{"version":3,"file":"static/js/916.c1f04b73.chunk.js","mappings":"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","sources":["component/charBlock/CharBlock.js"],"sourcesContent":["\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    TimeScale\r\n  } from 'chart.js';\r\nimport 'chartjs-adapter-date-fns';\r\nimport ruLocale from 'date-fns/locale/ru';\r\nimport {Form, Col, Spinner} from 'react-bootstrap';\r\n\r\n\r\n\r\nfunction CharBlock({getDataByCountries, dateTo, dateFrom, getDataByDays}) {\r\n    const [dataByCountries, setByCountries] = useState(null);\r\n    const [dataByDays, setDataPerDay] = useState(null);\r\n    const [filterId, setFilterId] = useState('all');\r\n    const [isSmallScrean, setIsSmallScrean ] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsSmallScrean(window.innerWidth < 992);\r\n        };\r\n        handleResize();\r\n\r\n        window.addEventListener('resize', handleResize);  \r\n        return () => window.removeEventListener('resize', handleResize);\r\n        \r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        getDataByDays(filterId)\r\n            .then(res => {\r\n                setDataPerDay(res)\r\n\r\n            })  \r\n    }, [filterId])\r\n\r\n    useEffect(() => {\r\n        getDataByDays()  \r\n        if(dateTo && dateFrom){\r\n            getDataByCountries()\r\n                .then(res => {\r\n                    setByCountries(res)            \r\n                }) \r\n            getDataByDays(filterId)\r\n                .then(res => {\r\n                    setDataPerDay(res)\r\n         \r\n                })      \r\n        }   \r\n    },[dateTo, dateFrom])\r\n   \r\n    let optionOfSelectOfCountries;\r\n    if(dataByCountries) {\r\n        optionOfSelectOfCountries =  dataByCountries.map((item,i) => {\r\n            return <option key={i} value={item.country}>{item.country}</option>;\r\n        })\r\n    }\r\n\r\n    ChartJS.register(\r\n        CategoryScale,\r\n        LinearScale,\r\n        PointElement,\r\n        LineElement,\r\n        Title,\r\n        Tooltip,\r\n        Legend,\r\n        TimeScale,     \r\n      );\r\n\r\n    const dataChar = {\r\n        datasets: [\r\n          {\r\n            label: 'Заболевания',\r\n            data: dataByDays ? dataByDays.map(item => ({x: item.date, y: item.cases})): [],\r\n            borderColor: '#ffc107',\r\n            backgroundColor: '#ffc107',\r\n            pointStyle: false,\r\n            tension: 0.1\r\n          },\r\n          {\r\n            label: 'Смерти',\r\n            data: dataByDays ? dataByDays.map(item => ({x: item.date, y: item.deaths})) : [],\r\n            borderColor: '#dc3545',\r\n            backgroundColor: '#dc3545',\r\n            pointStyle: false,\r\n            tension: 0.1\r\n          }\r\n        ],\r\n    };\r\n    const optoinsBigChar = {\r\n        responsive: true,\r\n        plugins: {\r\n            legend: {\r\n                position: 'top',\r\n                display: true,\r\n                labels: {\r\n                    font: {\r\n                        size: 20\r\n                    }\r\n                }\r\n              },\r\n            title:{ \r\n                display: true,\r\n                text: 'График заболеваемости и смертности',\r\n                font: {\r\n                    size: 24\r\n                }\r\n            }\r\n        },\r\n        scales: {\r\n            x: {\r\n                adapters: {\r\n                    date: {\r\n                      locale: ruLocale,\r\n                    },\r\n                  },\r\n                type: 'time',\r\n            },\r\n            y: {\r\n                title: {\r\n                    display: true,\r\n                    text: 'Количество случаев',\r\n                  },\r\n            }\r\n        }\r\n    }\r\n\r\n    const optionsSmallChar = {\r\n        responsive: false,\r\n        plugins: {\r\n            legend: {\r\n                position: 'left',\r\n                align: 'start',\r\n                position: 'top',\r\n                display: true,\r\n                labels: {\r\n                    font: {\r\n                        size: 14\r\n                    }\r\n                }\r\n              },\r\n            title:{ \r\n                align: 'start',\r\n                display: true,\r\n                text: 'График заболеваемости и смертности',\r\n                font: {\r\n                    size: 16\r\n                }\r\n            },\r\n            zoom: {\r\n                zoom: {\r\n                  enabled: true,\r\n                  mode: 'x',\r\n                },\r\n                pan: {\r\n                  enabled: true,\r\n                  mode: 'x',\r\n                },\r\n            },\r\n        },\r\n        scales: {\r\n            x: {\r\n                adapters: {\r\n                    date: {\r\n                      locale: ruLocale,\r\n                    },\r\n                  },\r\n                type: 'time',\r\n            },\r\n            y: {\r\n                title: {\r\n                    display: true,\r\n                  },\r\n            }\r\n        }\r\n    };\r\n\r\n    const smallChar = isSmallScrean && dataByDays? <Line\r\n                width={800}\r\n                height={400}\r\n                data={dataChar}\r\n                options={optionsSmallChar}          \r\n            />: null;\r\n    const bigChar = !smallChar && dataByDays ? <Line\r\n                data={dataChar}\r\n                options={optoinsBigChar}          \r\n            />: null;    \r\n    const spinner = !bigChar && !smallChar ? <Col className='d-flex justify-content-center'>\r\n                                                <Spinner animation=\"border\" role=\"status\" className=\"m-2\">\r\n                                                    <span className=\"visually-hidden\">Loading...</span>\r\n                                                </Spinner>\r\n                                            </Col> : null;\r\n    return (\r\n       <>\r\n            <Form.Select aria-label=\"Default select example\" value={filterId} onChange={(e) => setFilterId(e.target.value)}>\r\n                <option value='all'>Все страны</option>;\r\n                {optionOfSelectOfCountries}\r\n            </Form.Select>\r\n            <Col className=\"overflow-auto\">\r\n                {smallChar}\r\n                {bigChar}\r\n                {spinner}\r\n            </Col>\r\n       </>    \r\n    );\r\n}\r\n\r\nexport default CharBlock;"],"names":["_ref","_legend","optionOfSelectOfCountries","getDataByCountries","dateTo","dateFrom","getDataByDays","_useState","useState","_useState2","_slicedToArray","dataByCountries","setByCountries","_useState3","_useState4","dataByDays","setDataPerDay","_useState5","_useState6","filterId","setFilterId","_useState7","_useState8","isSmallScrean","setIsSmallScrean","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","then","res","map","item","i","_jsx","value","country","children","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","dataChar","datasets","label","data","x","date","y","cases","borderColor","backgroundColor","pointStyle","tension","deaths","optoinsBigChar","responsive","plugins","legend","position","display","labels","font","size","title","text","scales","adapters","locale","ruLocale","type","optionsSmallChar","align","_defineProperty","zoom","enabled","mode","pan","smallChar","Line","width","height","options","bigChar","spinner","Col","className","Spinner","animation","role","_jsxs","_Fragment","Form","onChange","e","target"],"sourceRoot":""}